; from S7j compiler written by Hung PHAN, Shir Lie Ooi, Sen Shen
          public      x
x:        dw        0
          public      z
z:        dw        -10
          public      zero
zero:     dw        0
          extern      e
; =============== start of function main
          public      main
main:    
          esba  
          asp         -1
          asp         -1
          pc          x
          p           @L0
^@L0:     dw        -4
          p           @L1
^@L1:     dw        -2
          add   
          stav  
; x = - 4 + - 2 ; 
          p           x
@L2:     
          dupe  
          pwc         -6
          cmps        2
          jz          @L4
          pc          x
          p           @L5
^@L5:     dw        2
          stav  
          cora        -1
          p           x
          stav  
          ja          @L3
@L4:     
          cora        -1
          p           @L6
^@L6:     dw        8
          p           x
          mult  
          stav  
          ja          @L3
@L3:     
          pwc         10000
          cmps        2
          jz          @L7
          ja          @L7
@L7:     
; switch ( x ) { case + - 6 : x = 2 ; y = x ; break ; default : y = 8 * x ; } 
          p           x
@L8:     
          dupe  
          pwc         2
          cmps        2
          jz          @L10
          cora        -1
          p           x
          stav  
          ja          @L9
@L10:    
          dupe  
          pwc         4
          cmps        2
          jz          @L11
          cora        -1
          p           @L12
^@L12:    dw        4
          p           x
          mult  
          stav  
          ja          @L9
@L11:    
          cora        -1
          p           @L13
^@L13:    dw        8
          p           x
          mult  
          stav  
          ja          @L9
@L9:     
          pwc         10000
          cmps        2
          jz          @L14
          ja          @L14
@L14:    
; switch ( x ) { case 2 : y = x ; break ; case 4 : y = 4 * x ; break ; default : y = 8 * x ; } 
          p           x
@L15:    
          dupe  
          pwc         1
          cmps        2
          jz          @L17
@L17:    
          dupe  
          pwc         2
          cmps        2
          jz          @L18
          cora        -1
          p           x
          stav  
          ja          @L16
@L18:    
          dupe  
          pwc         4
          cmps        2
          jz          @L19
          cora        -1
          p           @L20
^@L20:    dw        4
          p           x
          mult  
          stav  
          ja          @L16
@L19:    
          cora        -1
          p           @L21
^@L21:    dw        8
          p           x
          mult  
          stav  
          ja          @L16
@L16:    
          pwc         10000
          cmps        2
          jz          @L22
          ja          @L22
@L22:    
; switch ( x ) { case 1 : case + 2 : y = x ; break ; case 4 : y = 4 * x ; break ; default : y = 8 * x ; } 
          cora        -2
          p           x
          p           @L23
^@L23:    dw        2
          pr          -1
          add   
          mult  
          p           @L24
^@L24:    dw        4099
          add   
          stav  
; z = x * ( 2 + y ) + ( ( ( 4099 ) ) ) ; 
          pr          -2
          p           x
          add   
          p           @L25
^@L25:    dw        -2
          add   
          dout  
          pc          '\n'
          aout  
; println ( z + x + - 2 ) ; 
          p           @L26
^@L26:    dw        4107
          dout  
          pc          '\n'
          aout  
; println ( 4107 ) ; 
          pc          @L27
          sout  
^@L27:    dw        "S1 test done"
          pc          '\n'
          aout  
; println ( "S1 test done" ) ; 
          p           x
          p           zero
          add   
          pr          -2
          add   
          p           @L28
^@L28:    dw        4107
          sub   
          pr          -2
          call        f
          asp         2
; f ( x + zero + z - 4107 , z ) ; 
          p           @L29
^@L29:    dw        10
          p           @L30
^@L30:    dw        20
          p           e
          call        g
          asp         3
; g ( 10 , 20 , e ) ; 
          call        h
; h ( ) ; 
          pc          @L31
          sout  
^@L31:    dw        "S5 test done"
          pc          '\n'
          aout  
; println ( "S5 test done" ) ; 
          pc          @L32
          sout  
^@L32:    dw        "Enter integer"
          pc          '\n'
          aout  
; println ( "Enter integer" ) ; 
          pc          x
          din   
          stav  
; readint ( x ) ; 
          pc          @L33
          sout  
^@L33:    dw        "= "
; print ( "= " ) ; 
          p           x
          dout  
          pc          '\n'
          aout  
; println ( x ) ; 
          asp         -1
          call        i
          p           @L34
^@L34:    dw        2
          add   
          dout  
; print ( i ( ) + 2 ) ; 
          pc          @L35
          sout  
^@L35:    dw        " = 7"
          pc          '\n'
          aout  
; println ( " = 7" ) ; 
          pc          @L36
          sout  
^@L36:    dw        "S6 test done"
          pc          '\n'
          aout  
; println ( "S6 test done" ) ; 
          reba  
          ret   
; =============== end of function main
          public      y
y:        dw        2
; =============== start of function f
          public      f
f:       
          esba  
          asp         -1
          pc          @L37
          sout  
^@L37:    dw        "2 = "
; print ( "2 = " ) ; 
          p           y
          dout  
          pc          '\n'
          aout  
; println ( y ) ; 
          pr          2
          pr          3
          p           @L38
^@L38:    dw        50
          sub   
          sub   
          p           @L39
^@L39:    dw        2
          div   
          pr          3
          sub   
          dout  
          pc          '\n'
          aout  
; println ( ( z - ( x - 50 ) ) / 2 - x ) ; 
          p           @L40
^@L40:    dw        2075
          dout  
          pc          '\n'
          aout  
; println ( 2075 ) ; 
; ; 
; {
; {
; ; 
; {
          cora        3
          p           @L41
^@L41:    dw        10
          stav  
; x = 10 ; 
; ; 
          pc          y
          p           @L42
^@L42:    dw        20
          stav  
; y = 20 ; 
; }
; }
; ; 
; }
; {
; }
          pr          3
          dout  
; print ( x ) ; 
          pr          3
          dout  
          pc          '\n'
          aout  
; println ( x ) ; 
          p           @L43
^@L43:    dw        1010
          dout  
          pc          '\n'
          aout  
; println ( 1010 ) ; 
          p           y
          dout  
          pc          '\n'
          aout  
; println ( y ) ; 
          p           @L44
^@L44:    dw        20
          dout  
          pc          '\n'
          aout  
; println ( 20 ) ; 
          cora        3
          p           @L45
^@L45:    dw        1
          p           @L46
^@L46:    dw        2
          p           @L47
^@L47:    dw        3
          p           @L48
^@L48:    dw        4
          add   
          add   
          add   
          stav  
; x = 1 + ( 2 + ( 3 + 4 ) ) ; 
          pr          3
          dout  
          pc          '\n'
          aout  
; println ( x ) ; 
          p           @L49
^@L49:    dw        10
          dout  
          pc          '\n'
          aout  
; println ( 10 ) ; 
          cora        3
          p           @L50
^@L50:    dw        1
          p           @L51
^@L51:    dw        2
          add   
          p           @L52
^@L52:    dw        3
          add   
          p           @L53
^@L53:    dw        4
          add   
          p           @L54
^@L54:    dw        5
          add   
          stav  
; x = 1 + 2 + 3 + 4 + 5 ; 
          pr          3
          dout  
          pc          '\n'
          aout  
; println ( x ) ; 
          p           @L55
^@L55:    dw        15
          dout  
          pc          '\n'
          aout  
; println ( 15 ) ; 
          pc          @L56
          sout  
^@L56:    dw        "S2 test done"
          pc          '\n'
          aout  
; println ( "S2 test done" ) ; 
          pc          @L57
          sout  
^@L57:    dw        "four lines follow"
          pc          '\n'
          aout  
; println ( "four lines follow" ) ; 
          pc          @L58
          sout  
^@L58:    dw        "one line"
; print ( "one line" ) ; 
          pc          '\n'
          aout  
; println ( ) ; 
          pc          @L59
          sout  
^@L59:    dw        "one line"
          pc          '\n'
          aout  
; println ( "one line" ) ; 
          pc          @L60
          sout  
^@L60:    dw        "third line\nfourth line"
          pc          '\n'
          aout  
; println ( "third line\nfourth line" ) ; 
          cora        3
          pc          y
          cora        2
          p           @L61
^@L61:    dw        7
          dupe  
          rot   
          stav  
          dupe  
          rot   
          stav  
          stav  
; x = y = z = + - - - - - + - 7 ; 
          pr          3
          dout  
; print ( x ) ; 
          pc          @L62
          sout  
^@L62:    dw        " = "
; print ( " = " ) ; 
          p           y
          dout  
; print ( y ) ; 
          pc          @L63
          sout  
^@L63:    dw        " = "
; print ( " = " ) ; 
          pr          2
          dout  
; print ( z ) ; 
          pc          @L64
          sout  
^@L64:    dw        " = "
; print ( " = " ) ; 
          p           @L65
^@L65:    dw        7
          dout  
          pc          '\n'
          aout  
; println ( 7 ) ; 
          cora        2
          pr          3
          p           y
          neg   
          sub   
          neg   
          stav  
; z = - ( + x - + + - + + - + + + + - + + - + + - y ) ; 
          pc          @L66
          sout  
^@L66:    dw        "-14 = "
; print ( "-14 = " ) ; 
          pr          2
          dout  
; print ( z ) ; 
          pc          @L67
          sout  
^@L67:    dw        " = "
; print ( " = " ) ; 
          p           @L68
^@L68:    dw        14
          neg   
          neg   
          neg   
          dout  
          pc          '\n'
          aout  
; println ( - ( - ( + ( - ( 14 ) ) ) ) ) ; 
          pc          @L69
          sout  
^@L69:    dw        "////Enter integer////"
          pc          '\n'
          aout  
; println ( "////Enter integer////" ) ; 
          cora        -1
          din   
          stav  
; readint ( q ) ; 
          pc          @L70
          sout  
^@L70:    dw        "= "
; print ( "= " ) ; 
          pr          -1
          p           @L71
^@L71:    dw        1
          add   
          p           @L72
^@L72:    dw        1
          sub   
          dout  
          pc          '\n'
          aout  
; println ( q + + + + 1 - 1 ) ; 
          pc          @L73
          sout  
^@L73:    dw        "S3 test done"
          pc          '\n'
          aout  
; println ( "S3 test done" ) ; 
          cora        3
          p           @L74
^@L74:    dw        1
          stav  
; x = 1 ; 
          pc          @L75
          sout  
^@L75:    dw        "2 1 on separate lines"
          pc          '\n'
          aout  
; println ( "2 1 on separate lines" ) ; 
@L76:    
          pr          3
          jz          @L77
; {
          pc          y
          p           @L78
^@L78:    dw        2
          stav  
; y = 2 ; 
@L79:    
          p           y
          jz          @L80
; {
          p           y
          dout  
          pc          '\n'
          aout  
; println ( y ) ; 
          pc          y
          p           y
          p           @L81
^@L81:    dw        1
          sub   
          stav  
; y = y - 1 ; 
; }
          ja          @L79
@L80:    
; while ( y ) { println ( y ) ; y = y - 1 ; } 
          cora        3
          pr          3
          p           @L82
^@L82:    dw        1
          sub   
          stav  
; x = x - 1 ; 
; }
          ja          @L76
@L77:    
; while ( x ) { y = 2 ; while ( y ) { println ( y ) ; y = y - 1 ; } x = x - 1 ; } 
          pc          zero
          p           @L83
^@L83:    dw        0
          stav  
; zero = 0 ; 
@L84:    
          p           zero
          jz          @L85
          pc          @L86
          sout  
^@L86:    dw        "bug"
          pc          '\n'
          aout  
; println ( "bug" ) ; 
          ja          @L84
@L85:    
; while ( zero ) println ( "bug" ) ; 
          cora        3
          p           @L87
^@L87:    dw        0
          p           @L88
^@L88:    dw        3
          sub   
          stav  
; x = 0 - 3 ; 
          pc          @L89
          sout  
^@L89:    dw        "hello -3 up to hello -1\n"
; print ( "hello -3 up to hello -1\n" ) ; 
@L90:    
          pr          3
          jz          @L91
; {
          pr          3
          jz          @L92
          pc          @L93
          sout  
^@L93:    dw        "hello "
; print ( "hello " ) ; 
          ja          @L94
@L92:    
          pc          @L95
          sout  
^@L95:    dw        "bug1"
          pc          '\n'
          aout  
; println ( "bug1" ) ; 
@L94:    
; if ( x ) print ( "hello " ) ; else println ( "bug1" ) ; 
          pr          3
          dout  
          pc          '\n'
          aout  
; println ( x ) ; 
          cora        3
          pr          3
          p           @L96
^@L96:    dw        1
          add   
          stav  
; x = x + 1 ; 
; }
          ja          @L90
@L91:    
; while ( x ) { if ( x ) print ( "hello " ) ; else println ( "bug1" ) ; println ( x ) ; x = x + 1 ; } 
          cora        3
          p           @L97
^@L97:    dw        2
          stav  
; x = 2 ; 
          pc          @L98
          sout  
^@L98:    dw        "bye 2 down to bye 1\n"
; print ( "bye 2 down to bye 1\n" ) ; 
@L99:    
; {
          pc          @L101
          sout  
^@L101:   dw        "bye "
; print ( "bye " ) ; 
          pr          3
          dout  
          pc          '\n'
          aout  
; println ( x ) ; 
          cora        3
          pr          3
          p           @L102
^@L102:   dw        1
          sub   
          stav  
; x = x - 1 ; 
; }
          pr          3
          jnz         @L99
@L100:   
; do { print ( "bye " ) ; println ( x ) ; x = x - 1 ; } while ( x ) ; 
          cora        3
          p           @L103
^@L103:   dw        1
          stav  
; x = 1 ; 
          pc          @L104
          sout  
^@L104:   dw        "Next line should say \"hello\" with the quotes"
          pc          '\n'
          aout  
; println ( "Next line should say \"hello\" with the quotes" ) ; 
          pr          3
          jz          @L105
          pr          3
          jz          @L106
          pr          3
          jz          @L107
; {
          pc          @L108
          sout  
^@L108:   dw        "\"hel"
; print ( "\"hel" ) ; 
          pc          @L109
          sout  
^@L109:   dw        "lo\""
          pc          '\n'
          aout  
; println ( "lo\"" ) ; 
; }
          ja          @L110
@L107:   
; {
          pc          @L111
          sout  
^@L111:   dw        "bug3"
          pc          '\n'
          aout  
; println ( "bug3" ) ; 
; }
@L110:   
; if ( x ) { print ( "\"hel" ) ; println ( "lo\"" ) ; } else { println ( "bug3" ) ; } 
@L106:   
; if ( x ) if ( x ) { print ( "\"hel" ) ; println ( "lo\"" ) ; } else { println ( "bug3" ) ; } 
@L105:   
; if ( x ) if ( x ) if ( x ) { print ( "\"hel" ) ; println ( "lo\"" ) ; } else { println ( "bug3" ) ; } 
          pc          @L112
          sout  
^@L112:   dw        "good = "
; print ( "good = " ) ; 
          p           zero
          jz          @L113
; {
          pc          @L114
          sout  
^@L114:   dw        "bug4"
          pc          '\n'
          aout  
; println ( "bug4" ) ; 
; }
          ja          @L115
@L113:   
          pc          @L116
          sout  
^@L116:   dw        "good"
          pc          '\n'
          aout  
; println ( "good" ) ; 
@L115:   
; if ( zero ) { println ( "bug4" ) ; } else println ( "good" ) ; 
          pc          @L117
          sout  
^@L117:   dw        "Next line should say \"bye\" without the quotes\nbye"
          pc          '\n'
          aout  
; println ( "Next line should say \"bye\" without the quotes\nbye" ) ; 
          pc          @L118
          sout  
^@L118:   dw        "\"3 backslashes and a double quote \\\\\\\" within a string\""
          pc          '\n'
          aout  
; println ( "\"3 backslashes and a double quote \\\\\\\" within a string\"" ) ; 
          pc          @L119
          sout  
^@L119:   dw        "S4 test done"
          pc          '\n'
          aout  
; println ( "S4 test done" ) ; 
          reba  
          ret   
; =============== end of function f
; =============== start of function h
          public      h
h:       
          esba  
          pc          @L120
          sout  
^@L120:   dw        "-8 = "
; print ( "-8 = " ) ; 
          p           x
          p           z
          add   
          dout  
          pc          '\n'
          aout  
; println ( x + z ) ; 
          reba  
          ret   
; =============== end of function h
; =============== start of function i
          public      i
i:       
          esba  
          p           @L121
^@L121:   dw        10
          p           @L122
^@L122:   dw        20
          asp         -1
          pc          @L123
          sout  
^@L123:   dw        "1 = "
; print ( "1 = " ) ; 
          pr          -1
          pr          -2
          cmps        4
          dout  
          pc          '\n'
          aout  
; println ( x < y ) ; 
          pc          @L124
          sout  
^@L124:   dw        "1 = "
; print ( "1 = " ) ; 
          pr          -1
          pr          -2
          cmps        6
          dout  
          pc          '\n'
          aout  
; println ( x <= y ) ; 
          pc          @L125
          sout  
^@L125:   dw        "0 = "
; print ( "0 = " ) ; 
          pr          -1
          pr          -2
          cmps        2
          dout  
          pc          '\n'
          aout  
; println ( x == y ) ; 
          pc          @L126
          sout  
^@L126:   dw        "1 = "
; print ( "1 = " ) ; 
          pr          -1
          pr          -2
          cmps        5
          dout  
          pc          '\n'
          aout  
; println ( x != y ) ; 
          pc          @L127
          sout  
^@L127:   dw        "0 = "
; print ( "0 = " ) ; 
          pr          -1
          pr          -2
          cmps        1
          dout  
          pc          '\n'
          aout  
; println ( x > y ) ; 
          pc          @L128
          sout  
^@L128:   dw        "0 = "
; print ( "0 = " ) ; 
          pr          -1
          pr          -2
          cmps        3
          dout  
          pc          '\n'
          aout  
; println ( x >= y ) ; 
          cora        -1
          p           @L129
^@L129:   dw        20
          stav  
; x = 20 ; 
          pc          @L130
          sout  
^@L130:   dw        "0 = "
; print ( "0 = " ) ; 
          pr          -1
          pr          -2
          cmps        4
          dout  
          pc          '\n'
          aout  
; println ( x < y ) ; 
          pc          @L131
          sout  
^@L131:   dw        "1 = "
; print ( "1 = " ) ; 
          pr          -1
          pr          -2
          cmps        6
          dout  
          pc          '\n'
          aout  
; println ( x <= y ) ; 
          pc          @L132
          sout  
^@L132:   dw        "1 = "
; print ( "1 = " ) ; 
          pr          -1
          pr          -2
          cmps        2
          dout  
          pc          '\n'
          aout  
; println ( x == y ) ; 
          pc          @L133
          sout  
^@L133:   dw        "0 = "
; print ( "0 = " ) ; 
          pr          -1
          pr          -2
          cmps        5
          dout  
          pc          '\n'
          aout  
; println ( x != y ) ; 
          pc          @L134
          sout  
^@L134:   dw        "0 = "
; print ( "0 = " ) ; 
          pr          -1
          pr          -2
          cmps        1
          dout  
          pc          '\n'
          aout  
; println ( x > y ) ; 
          pc          @L135
          sout  
^@L135:   dw        "1 = "
; print ( "1 = " ) ; 
          pr          -1
          pr          -2
          cmps        3
          dout  
          pc          '\n'
          aout  
; println ( x >= y ) ; 
          pc          @L136
          sout  
^@L136:   dw        "Enter integer"
          pc          '\n'
          aout  
; println ( "Enter integer" ) ; 
          cora        -1
          din   
          stav  
; readint ( x ) ; 
          pc          @L137
          sout  
^@L137:   dw        "= "
; print ( "= " ) ; 
          pr          -1
          dout  
          pc          '\n'
          aout  
; println ( x ) ; 
          cora        -1
          p           @L138
^@L138:   dw        30
          stav  
; x = 30 ; 
          pc          @L139
          sout  
^@L139:   dw        "0 = "
; print ( "0 = " ) ; 
          pr          -1
          pr          -2
          cmps        4
          dout  
          pc          '\n'
          aout  
; println ( x < y ) ; 
          pc          @L140
          sout  
^@L140:   dw        "0 = "
; print ( "0 = " ) ; 
          pr          -1
          pr          -2
          cmps        6
          dout  
          pc          '\n'
          aout  
; println ( x <= y ) ; 
          pc          @L141
          sout  
^@L141:   dw        "0 = "
; print ( "0 = " ) ; 
          pr          -1
          pr          -2
          cmps        2
          dout  
          pc          '\n'
          aout  
; println ( x == y ) ; 
          pc          @L142
          sout  
^@L142:   dw        "1 = "
; print ( "1 = " ) ; 
          pr          -1
          pr          -2
          cmps        5
          dout  
          pc          '\n'
          aout  
; println ( x != y ) ; 
          pc          @L143
          sout  
^@L143:   dw        "1 = "
; print ( "1 = " ) ; 
          pr          -1
          pr          -2
          cmps        1
          dout  
          pc          '\n'
          aout  
; println ( x > y ) ; 
          pc          @L144
          sout  
^@L144:   dw        "1 = "
; print ( "1 = " ) ; 
          pr          -1
          pr          -2
          cmps        3
          dout  
          pc          '\n'
          aout  
; println ( x >= y ) ; 
          pc          @L145
          sout  
^@L145:   dw        "5 = "
; print ( "5 = " ) ; 
          p           @L146
^@L146:   dw        11
          p           @L147
^@L147:   dw        6
          rem   
          dout  
          pc          '\n'
          aout  
; println ( 11 % 6 ) ; 
          pc          @L148
          sout  
^@L148:   dw        "3 hello's and 3 goodbye's should follow"
          pc          '\n'
          aout  
; println ( "3 hello's and 3 goodbye's should follow" ) ; 
@L149:   
; {
@L151:   
          pr          -1
          jz          @L152
; {
          pr          -1
          p           @L153
^@L153:   dw        27
          cmps        2
          jz          @L154
          ja          @L152
; break 
@L154:   
; if ( x == 27 ) break 
; ; 
          pc          @L155
          sout  
^@L155:   dw        "hello"
          pc          '\n'
          aout  
; println ( "hello" ) ; 
          cora        -1
          pr          -1
          p           @L156
^@L156:   dw        1
          sub   
          stav  
; x = x - 1 ; 
; }
          ja          @L151
@L152:   
; while ( x ) { if ( x == 27 ) break ; println ( "hello" ) ; x = x - 1 ; } 
          pr          -2
          p           @L157
^@L157:   dw        17
          cmps        2
          jz          @L158
          ja          @L150
; break 
@L158:   
; if ( y == 17 ) break 
; ; 
          pc          @L159
          sout  
^@L159:   dw        "goodbye"
          pc          '\n'
          aout  
; println ( "goodbye" ) ; 
          cora        -2
          pr          -2
          p           @L160
^@L160:   dw        1
          sub   
          stav  
; y = y - 1 ; 
; }
          pr          -2
          p           @L161
^@L161:   dw        15
          cmps        1
          jnz         @L149
@L150:   
; do { while ( x ) { if ( x == 27 ) break ; println ( "hello" ) ; x = x - 1 ; } if ( y == 17 ) break ; println ( "goodbye" ) ; y = y - 1 ; } while ( y > 15 ) ; 
          cora        2
          pr          -1
          p           @L162
^@L162:   dw        22
          sub   
          stav  
          reba  
          ret   
; =============== end of function i

          halt  
          extern      g
